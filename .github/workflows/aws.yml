name: Push-to-EC2

# Trigger deployment only on push to master branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-latest
    env:
      PORT: 8000
      POSTGRES_USER: kindude
      HOST: '0.0.0.0'
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: pg
      POSTGRES_PORTS: 5432
      REDIS_PORTS: 6379
      REDIS_HOST: redis
      APP_PORTS: 8000
      DB_PATH: postgresql://kindude:1234@localhost:5432/pg
      DB_POSTGRES_DB_NAME: internship-postgres-1
      ALGORITHM: HS256
      PYTHONPATH: app
      RELOAD: True
      API_AUDIENC: https://auth-reg
      AUTH0_SECRET_KEY: EinFdLqBbujAVpVnrMbiGiMQrlyeedTVkjn5IewxyZLCHUIzRU7ZyNyW27lhR7eL
      AUTH0_DOMAIN: dev-nusd43iygpsjwqlj.us.auth0.com
      ALGORITHM_AUTH0: "HS256"
      SALT: 5z

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-docker@v2
        with:
          docker-version: '20.10.7'

      - name: Build Docker image
        run: docker build -t your-image-name:latest .

      - name: Push Docker image to AWS ECR
        run: |
          echo ${{ secrets.AWS_ACCESS_KEY_ID }} > aws_access_key_id
          echo ${{ secrets.AWS_SECRET_ACCESS_KEY }} > aws_secret_access_key
          aws configure set aws_access_key_id $(cat aws_access_key_id)
          aws configure set aws_secret_access_key $(cat aws_secret_access_key)
          aws ecr get-login-password --region your-region | docker login --username AWS --password-stdin your-account-id.dkr.ecr.your-region.amazonaws.com
          docker tag your-image-name:latest your-account-id.dkr.ecr.your-region.amazonaws.com/your-image-name:latest
          docker push your-account-id.dkr.ecr.your-region.amazonaws.com/your-image-name:latest

      - name: SSH into EC2 and Deploy Docker container
        uses: easingthemes/ssh-deploy@main
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
          remote-host: ${{ secrets.HOST_DNS }}
          remote-user: ${{ secrets.USERNAME }}
          source: docker-compose.yml
          target: /path/on/ec2 
